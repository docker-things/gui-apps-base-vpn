#!/bin/bash

function exitError() {
    echo -e "\n[`date +"%Y-%m-%d %H:%M:%S"`] [ERROR] $1\n"
    exit 1
}

function info() {
    echo -e "\n[`date +"%Y-%m-%d %H:%M:%S"`] [INFO] $1"
}

function getPidsOf() {
    ps ax | grep $1 | grep -v grep | awk '{print $1}' | sed -e ':a;N;$!ba;s/\n/ /g'
}

function startVpn() {
    LOG_FILE="/tmp/openvpn.status"

    echo '' > "$LOG_FILE"

    info "LAUNCHING VPN"
    /usr/bin/openvpn-config "$OPENVPN_USER" "$OPENVPN_PASS" &

    info "WAITING FOR VPN CONNECTION"
    while [ "`grep initialized $LOG_FILE`" == "" ]; do
        sleep 1s
        if [ "`ps ax | grep openvpn-config`" == "" ]; then
            info "openvpn-config is not running anymore!"
            stopVpn
            startVpn
            break
        fi
    done
}

function stopVpn() {
    VPN_PIDS="`getPidsOf openvpn`"

    info "KILLING VPN ($VPN_PIDS)"
    kill -SIGINT $VPN_PIDS
}


if [ "${OPENVPN_USER}" == "" ]; then
    exitError "OPENVPN_USER is not set!"
fi

if [ "${OPENVPN_PASS}" == "" ]; then
    exitError "OPENVPN_PASS is not set!"
fi

VPN_ALREADY_RUNNING="`getPidsOf openvpn`"

if [ "$VPN_ALREADY_RUNNING" == "" ]; then
    yad --progress --pulsate --progress-text="Launching openvpn..."
    startVpn
    YAD_PIDS="`getPidsOf yad`"
    if [ "$YAD_PIDS" != "" ]; then
        kill -9 $YAD_PIDS
    fi
else
    info "openvpn already running ($VPN_ALREADY_RUNNING)"
    ps ax | grep openvpn
fi

info "LAUNCHING APP"
su -c "$@" $DOCKER_USERNAME
info "APP STOPPED"

if [ "$VPN_ALREADY_RUNNING" == "" ]; then
    stopVpn

    info "ps ax:"
    ps ax

    info "WAITING FOR VPN TO DIE"
    while [ "`ps ax | grep 'openvpn --config' | grep -v grep`" != "" ]; do
        info "RUNNING:"
        ps ax | grep 'openvpn' | grep -v grep

        sleep 1s
    done

    info "DONE"
fi
